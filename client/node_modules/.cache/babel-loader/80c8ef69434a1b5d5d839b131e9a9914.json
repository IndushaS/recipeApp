{"ast":null,"code":"var _jsxFileName = \"/Users/bhoom1/Desktop/recipeApp/client/src/components/Recipe.js\";\nimport React, { Component } from \"react\";\nimport AddRecipe from \"./addRecipe\";\nimport \"./Recipe.css\";\nimport { Route, BrowserRouter as Router, Switch, Link } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nclass Recipe extends Component {\n  constructor() {\n    super();\n    this.state = {\n      recipes: [] // State array to hold recipe objects that are fetched from the database\n\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/getRecipes\") //Api call using route from server.js to obtain recipe data\n    .then(res => res.json()).then(recipes => this.setState({\n      recipes\n    }, () => //inserts data to the state array of the component\n    console.log(\"recipes fetched...\", recipes) //confirm that the recipes were fetched in the console\n    ));\n  }\n  /*isAuthenticated() {\n    var Authenticated = useAuth0();\n    this.state.isAuthenticated = Authenticated;\n  }*/\n  //added react route link in this component to open the edit recipe form with prefilled fields\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, this.state.recipes.map((recipe //iterate through each recipe object in the state array display the id, name and instructions of each recipe\n    ) =>\n    /*#__PURE__*/\n    React.createElement(\"li\", {\n      className: \"Recipes\",\n      key: recipe.idrecipe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/addRecipe\",\n      name: \"hello\",\n      instructions: \"jee;;p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }, \"id :\", recipe.idrecipe), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    }, \"name : \", recipe.recipeName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    }, \"instructions: \", recipe.recipeInstruction))))), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/addRecipe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AddRecipe, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default Recipe; //Export the recipe component to be used in the main index.js file","map":{"version":3,"sources":["/Users/bhoom1/Desktop/recipeApp/client/src/components/Recipe.js"],"names":["React","Component","AddRecipe","Route","BrowserRouter","Router","Switch","Link","useAuth0","Card","CardActions","CardContent","Grid","makeStyles","Recipe","constructor","state","recipes","componentDidMount","fetch","then","res","json","setState","console","log","render","map","recipe","idrecipe","recipeName","recipeInstruction"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,cAAP;AACA,SAASC,KAAT,EAAgBC,aAAa,IAAIC,MAAjC,EAAyCC,MAAzC,EAAiDC,IAAjD,QAA6D,kBAA7D;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,MAAMC,MAAN,SAAqBb,SAArB,CAA+B;AAC7Bc,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE,CACE;;AADF,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,aAAD,CAAL,CAAqB;AAArB,KACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESH,OAAD,IACJ,KAAKM,QAAL,CACE;AAAEN,MAAAA;AAAF,KADF,EAEE,MACE;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCR,OAAlC,CAJJ,CAI+C;AAJ/C,KAHJ;AAUD;AACD;AACF;AACA;AACA;AAEE;;;AACAS,EAAAA,MAAM,GAAG;AAEP,wBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKV,KAAL,CAAWC,OAAX,CAAmBU,GAAnB,CAAuB,CACtBC,MADsB,CACf;AADe;AAAA;AAGtB;AAAI,MAAA,SAAS,EAAC,SAAd;AAAwB,MAAA,GAAG,EAAEA,MAAM,CAACC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,YAAT;AAAsB,MAAA,IAAI,EAAC,OAA3B;AAAmC,MAAA,YAAY,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAQD,MAAM,CAACC,QAAf,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWD,MAAM,CAACE,UAAlB,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAkBF,MAAM,CAACG,iBAAzB,CAJF,CALF,CAHD,CADH,CADF,eAoBE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CApBF,CAFF,CADF;AAgCD;;AA5D4B;;AA8D/B,eAAejB,MAAf,C,CAAuB","sourcesContent":["import React, { Component } from \"react\";\nimport AddRecipe from \"./addRecipe\";\nimport \"./Recipe.css\";\nimport { Route, BrowserRouter as Router, Switch, Link } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nclass Recipe extends Component {\n  constructor() {\n    super();\n    this.state = {\n      recipes: [], // State array to hold recipe objects that are fetched from the database\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/getRecipes\") //Api call using route from server.js to obtain recipe data\n      .then((res) => res.json())\n      .then((recipes) =>\n        this.setState(\n          { recipes },\n          () =>\n            //inserts data to the state array of the component\n            console.log(\"recipes fetched...\", recipes) //confirm that the recipes were fetched in the console\n        )\n      );\n  }\n  /*isAuthenticated() {\n    var Authenticated = useAuth0();\n    this.state.isAuthenticated = Authenticated;\n  }*/\n\n  //added react route link in this component to open the edit recipe form with prefilled fields\n  render() {\n   \n    return (\n      <Router>\n       \n        <div>\n          <ul>\n            {this.state.recipes.map((\n              recipe //iterate through each recipe object in the state array display the id, name and instructions of each recipe\n            ) => (\n              <li className=\"Recipes\" key={recipe.idrecipe}>\n                <Link to=\"/addRecipe\" name=\"hello\" instructions=\"jee;;p\">\n                  Edit\n                </Link>\n                {/* <button type = \"button\" className=\"btn btn-primary btn-lg\" onClick={() => console.log('hello')}>Edit</button> */}\n                <h1>\n\n                  <p>id :{recipe.idrecipe}</p>\n                  <p>name : {recipe.recipeName}</p>\n                  <p>instructions: {recipe.recipeInstruction}</p>\n\n                </h1>\n              </li>\n            ))}\n          </ul>\n          <Switch>\n            <Route path=\"/addRecipe\">\n              <AddRecipe />\n            </Route>\n          </Switch>\n        </div>\n      \n      </Router>\n    );\n  }\n}\nexport default Recipe; //Export the recipe component to be used in the main index.js file\n"]},"metadata":{},"sourceType":"module"}