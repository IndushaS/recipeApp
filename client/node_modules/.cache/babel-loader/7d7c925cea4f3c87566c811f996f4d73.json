{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/Projects/recipeApp/client/src/components/Recipe.js\";\nimport React, { Component } from \"react\";\nimport EditRecipe from './editRecipe';\nimport AddRecipe from './addRecipe';\nimport \"./recipe.css\";\nimport { Route, BrowserRouter as Router, Switch, Link } from 'react-router-dom';\n\nclass Recipe extends Component {\n  constructor() {\n    super();\n    this.state = {\n      recipes: [] // State array to hold recipe objects that are fetched from the database\n\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/getRecipes\") //Api call using route from server.js to obtain recipe data\n    .then(res => res.json()).then(recipes => this.setState({\n      recipes\n    }, () => //inserts data to the state array of the component\n    console.log(\"recipes fetched...\", recipes) //confirm that the recipes were fetched in the console\n    ));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, this.state.recipes.map((recipe //iterate through each recipe object in the state array display the id, name and instructions of each recipe\n    ) =>\n    /*#__PURE__*/\n    React.createElement(\"li\", {\n      className: \"Recipes\",\n      key: recipe.idrecipe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/addRecipe\",\n      name: recipe.recipeName,\n      instructions: recipe.recipeInstruction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 19\n      }\n    }, \"id :\", recipe.idrecipe), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }\n    }, \"name : \", recipe.recipeName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }\n    }, \"instructions: \", recipe.recipeInstruction))))), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/addRecipe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(AddRecipe, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    })))));\n  }\n\n}\n\nexport default Recipe; //Export the recipe component to be used in the main index.js file","map":{"version":3,"sources":["/Users/owner/Desktop/Projects/recipeApp/client/src/components/Recipe.js"],"names":["React","Component","EditRecipe","AddRecipe","Route","BrowserRouter","Router","Switch","Link","Recipe","constructor","state","recipes","componentDidMount","fetch","then","res","json","setState","console","log","render","map","recipe","idrecipe","recipeName","recipeInstruction"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,cAAP;AACA,SAAQC,KAAR,EAAeC,aAAa,IAAIC,MAAhC,EAAwCC,MAAxC,EAAgDC,IAAhD,QAA2D,kBAA3D;;AAEA,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;AAC7BS,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE,CACE;;AADF,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,aAAD,CAAL,CAAqB;AAArB,KACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESH,OAAD,IACJ,KAAKM,QAAL,CACE;AAAEN,MAAAA;AAAF,KADF,EAEE,MACE;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCR,OAAlC,CAJJ,CAI+C;AAJ/C,KAHJ;AAUD;;AAGDS,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKV,KAAL,CAAWC,OAAX,CAAmBU,GAAnB,CAAuB,CACtBC,MADsB,CACf;AADe;AAAA;AAGtB;AAAI,MAAA,SAAS,EAAC,SAAd;AAAwB,MAAA,GAAG,EAAEA,MAAM,CAACC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,YAAT;AAAsB,MAAA,IAAI,EAAED,MAAM,CAACE,UAAnC;AAA+C,MAAA,YAAY,EAAEF,MAAM,CAACG,iBAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAQH,MAAM,CAACC,QAAf,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWD,MAAM,CAACE,UAAlB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAkBF,MAAM,CAACG,iBAAzB,CAHF,CAHF,CAHD,CADH,CADF,eAgBE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADA,CAhBF,CADF,CADF;AA2BD;;AAlD4B;;AAqD/B,eAAejB,MAAf,C,CAAuB","sourcesContent":["import React, { Component } from \"react\";\nimport EditRecipe from './editRecipe'\nimport AddRecipe from './addRecipe'\nimport \"./recipe.css\";\nimport {Route, BrowserRouter as Router, Switch, Link} from 'react-router-dom'\n\nclass Recipe extends Component {\n  constructor() {\n    super();\n    this.state = {\n      recipes: [], // State array to hold recipe objects that are fetched from the database\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/getRecipes\") //Api call using route from server.js to obtain recipe data\n      .then((res) => res.json())\n      .then((recipes) =>\n        this.setState(\n          { recipes },\n          () =>\n            //inserts data to the state array of the component\n            console.log(\"recipes fetched...\", recipes) //confirm that the recipes were fetched in the console\n        )\n      );\n  }\n\n  \n  render() {\n    return (\n      <Router>\n        <div>\n          <ul>\n            {this.state.recipes.map((\n              recipe //iterate through each recipe object in the state array display the id, name and instructions of each recipe\n            ) => (  \n              <li className=\"Recipes\" key={recipe.idrecipe}>\n              <Link to=\"/addRecipe\" name={recipe.recipeName} instructions={recipe.recipeInstruction}>Edit</Link>\n                {/* <button type = \"button\" className=\"btn btn-primary btn-lg\" onClick={() => console.log('hello')}>Edit</button> */}\n                <h1>\n                  <p>id :{recipe.idrecipe}</p>\n                  <p>name : {recipe.recipeName}</p>\n                  <p>instructions: {recipe.recipeInstruction}</p>\n                </h1>\n              </li>\n            ))}\n          </ul>\n          <Switch>\n          <Route exact path=\"/addRecipe\">\n            <AddRecipe />\n          </Route>\n        </Switch>\n        </div>\n      </Router>\n      \n    );\n  }\n}\n\nexport default Recipe; //Export the recipe component to be used in the main index.js file\n"]},"metadata":{},"sourceType":"module"}