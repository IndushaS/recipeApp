{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/recipeApp/client/src/components/RecipeCard.js\";\nimport React, { Component } from \"react\";\nimport ReactBootstrap, { Card, Button, Col, Grid, Panel, FormGroup } from \"react-bootstrap\";\nimport LikeButton from \"./RatingButton.js\";\nimport { Route, BrowserRouter as Router, Switch, Link } from \"react-router-dom\";\nimport editRecipe from \"./EditRecipe\";\nimport Modal from \"react-modal\";\nModal.setAppElement(\"#yourAppElement\");\n\nconst RecipeCard = props => {\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      width: \"18rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Img, {\n    variant: \"top\",\n    src: props.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, props.name), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, props.instructions, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"ingredients:\"), props.ingredients, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: openModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Open Modal\"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalIsOpen,\n    onAfterOpen: afterOpenModal,\n    onRequestClose: closeModal,\n    style: customStyles,\n    contentLabel: \"Example Modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    ref: _subtitle => subtitle = _subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, \"Hello\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, \"close\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \"I am a modal\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"tab navigation\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"stays\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"inside\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"the modal\")))), /*#__PURE__*/React.createElement(LikeButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default RecipeCard;","map":{"version":3,"sources":["/Users/owner/Desktop/recipeApp/client/src/components/RecipeCard.js"],"names":["React","Component","ReactBootstrap","Card","Button","Col","Grid","Panel","FormGroup","LikeButton","Route","BrowserRouter","Router","Switch","Link","editRecipe","Modal","setAppElement","RecipeCard","props","modalIsOpen","setIsOpen","useState","closeModal","openModal","width","img","name","instructions","ingredients","afterOpenModal","customStyles","_subtitle","subtitle"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactBootstrap, {\n  Card,\n  Button,\n  Col,\n  Grid,\n  Panel,\n  FormGroup,\n} from \"react-bootstrap\";\nimport LikeButton from \"./RatingButton.js\";\nimport { Route, BrowserRouter as Router, Switch, Link } from \"react-router-dom\";\nimport editRecipe from \"./EditRecipe\";\nimport Modal from \"react-modal\";\n\nModal.setAppElement(\"#yourAppElement\");\n\nconst RecipeCard = (props) => {\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  return (\n    <div>\n      <Card style={{ width: \"18rem\" }}>\n        <Card.Img variant='top' src={props.img} />\n        <Card.Body>\n          <Card.Title>{props.name}</Card.Title>\n          <Card.Text>\n            {props.instructions}\n            <p></p>\n            <h4>ingredients:</h4>\n            {props.ingredients}\n            <button onClick={openModal}>Open Modal</button>\n            <Modal\n              isOpen={modalIsOpen}\n              onAfterOpen={afterOpenModal}\n              onRequestClose={closeModal}\n              style={customStyles}\n              contentLabel='Example Modal'\n            >\n              <h2 ref={(_subtitle) => (subtitle = _subtitle)}>Hello</h2>\n              <button onClick={closeModal}>close</button>\n              <div>I am a modal</div>\n              <form>\n                <input />\n                <button>tab navigation</button>\n                <button>stays</button>\n                <button>inside</button>\n                <button>the modal</button>\n              </form>\n            </Modal>\n          </Card.Text>\n          <LikeButton />\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default RecipeCard;\n"]},"metadata":{},"sourceType":"module"}