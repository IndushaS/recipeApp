{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/recipeApp/client/src/components/RecipeCard.js\";\nimport React, { Component } from \"react\";\nimport ReactBootstrap, { Card, Button, Col, Grid, Panel, FormGroup } from \"react-bootstrap\";\nimport LikeButton from \"./RatingButton.js\";\nimport Modal from \"react-modal\";\nimport \"./recipecard.css\";\nModal.setAppElement(\"#root\");\n\nconst RecipeCard = props => {\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  const [recipeName, setRecipeName] = React.useState(props.name);\n  const [reciepInstructions, setRecipeInstructions] = React.useState(props.instructions);\n  const [recipeImage, setRecipeImage] = React.useState(props.img);\n  const [recipeIngredients, setRecipeIngredients] = React.useState(props.ingredients);\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  const handleNameChange = event => {\n    setRecipeName(event.target.value);\n  };\n\n  const handleInstructionsChange = event => {\n    setRecipeInstructions(event.target.value);\n  };\n\n  const handleImageChange = event => {\n    setRecipeImage(event.target.value);\n  };\n\n  const handleIngredientsChange = event => {\n    setRecipeIngredients(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      width: \"18rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Img, {\n    variant: \"top\",\n    src: props.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, props.name), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, props.instructions, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"ingredients:\"), props.ingredients, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalIsOpen,\n    onRequestClose: closeModal,\n    contentLabel: \"Example Modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addRecipeContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"headerTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }, \"Edit Recipe\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"recipeTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }, \"Image\"), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"recipeImg\",\n    src: recipeImage,\n    id: \"img-change\",\n    alt: \"Loading...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: recipeImage,\n    className: \"recipeName\",\n    onChange: handleImageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"recipeTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: recipeName,\n    onChange: handleNameChange,\n    className: \"recipeName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"recipeTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  }, \"Instructions\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    value: reciepInstructions,\n    onChange: handleInstructionsChange,\n    className: \"recipeInstructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"recipeTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    value: recipeIngredients,\n    onChange: handleIngredientsChange,\n    className: \"recipeInstructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger btn-lg\",\n    onClick: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-success btn-lg\",\n    onClick: () => {\n      alert(`Successfully updated recipe ${recipeName};\n                         `);\n      closeModal();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, \"Submit\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttonLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LikeButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: openModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, \"Edit\")))));\n};\n\nexport default RecipeCard;","map":{"version":3,"sources":["/Users/owner/Desktop/recipeApp/client/src/components/RecipeCard.js"],"names":["React","Component","ReactBootstrap","Card","Button","Col","Grid","Panel","FormGroup","LikeButton","Modal","setAppElement","RecipeCard","props","modalIsOpen","setIsOpen","useState","recipeName","setRecipeName","name","reciepInstructions","setRecipeInstructions","instructions","recipeImage","setRecipeImage","img","recipeIngredients","setRecipeIngredients","ingredients","closeModal","openModal","handleNameChange","event","target","value","handleInstructionsChange","handleImageChange","handleIngredientsChange","width","alert"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactBootstrap, {\n  Card,\n  Button,\n  Col,\n  Grid,\n  Panel,\n  FormGroup,\n} from \"react-bootstrap\";\nimport LikeButton from \"./RatingButton.js\";\nimport Modal from \"react-modal\";\nimport \"./recipecard.css\";\n\nModal.setAppElement(\"#root\");\n\nconst RecipeCard = (props) => {\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  const [recipeName, setRecipeName] = React.useState(props.name);\n  const [reciepInstructions, setRecipeInstructions] = React.useState(\n    props.instructions\n  );\n  const [recipeImage, setRecipeImage] = React.useState(props.img);\n  const [recipeIngredients, setRecipeIngredients] = React.useState(\n    props.ingredients\n  );\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  function openModal() {\n    setIsOpen(true);\n  }\n  const handleNameChange = (event) => {\n    setRecipeName(event.target.value);\n  };\n  const handleInstructionsChange = (event) => {\n    setRecipeInstructions(event.target.value);\n  };\n  const handleImageChange = (event) => {\n    setRecipeImage(event.target.value);\n  };\n  const handleIngredientsChange = (event) => {\n    setRecipeIngredients(event.target.value);\n  };\n\n  return (\n    <div>\n      <Card style={{ width: \"18rem\" }}>\n        <Card.Img variant='top' src={props.img} />\n        <Card.Body>\n          <Card.Title>{props.name}</Card.Title>\n          <Card.Text>\n            {props.instructions}\n            <p></p>\n            <h4>ingredients:</h4>\n            {props.ingredients}\n\n            {/* edit recipe modal */}\n            <Modal\n              isOpen={modalIsOpen}\n              onRequestClose={closeModal}\n              contentLabel='Example Modal'\n            >\n              <form>\n                <div className='addRecipeContainer'>\n                  <label className='headerTitle'>Edit Recipe</label>\n\n                  <label className='recipeTitle'>Image</label>\n                  <img\n                    className='recipeImg'\n                    src={recipeImage}\n                    id='img-change'\n                    alt='Loading...'\n                  />\n                  <input\n                    type='text'\n                    value={recipeImage}\n                    className='recipeName'\n                    onChange={handleImageChange}\n                  ></input>\n\n                  <label className='recipeTitle'>Name</label>\n                  <input\n                    type='text'\n                    value={recipeName}\n                    onChange={handleNameChange}\n                    className='recipeName'\n                  ></input>\n                  <label className='recipeTitle'>Instructions</label>\n                  <textarea\n                    type='text'\n                    value={reciepInstructions}\n                    onChange={handleInstructionsChange}\n                    className='recipeInstructions'\n                  ></textarea>\n                  <label className='recipeTitle'>Ingredients</label>\n                  <textarea\n                    type='text'\n                    value={recipeIngredients}\n                    onChange={handleIngredientsChange}\n                    className='recipeInstructions'\n                  ></textarea>\n                  <div className='buttons'>\n                    <button\n                      type='button'\n                      className='btn btn-danger btn-lg'\n                      onClick={closeModal}\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      type='button'\n                      className='btn btn-success btn-lg'\n                      onClick={() => {\n                        alert(`Successfully updated recipe ${recipeName};\n                         `);\n                        closeModal();\n                      }}\n                    >\n                      Submit\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </Modal>\n          </Card.Text>\n          <div className='buttonLayout'>\n            <LikeButton />\n            <Button onClick={openModal}>Edit</Button>\n          </div>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default RecipeCard;\n"]},"metadata":{},"sourceType":"module"}