{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/Projects/recipeApp/client/src/components/addRecipe.js\";\nimport React, { useState } from \"react\";\nimport \"./addRecipe.css\";\nimport Form from \"react-bootstrap/Form\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction handleChange(e) {\n  console.log(e.target.value);\n}\n\nfunction AddRecipe(props) {\n  const [instructions, setInstructions] = useState(props.location.recipeInstruction);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recipecontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"title parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"box child\",\n    type: \"text\",\n    value: props.location.recipeName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"Instructions\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"textbox\",\n    type: \"text\",\n    value: instructions,\n    onChange: e => setInstructions(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-danger btn-lg button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-success btn-lg button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n}\n\nexport default AddRecipe; // class addRecipe extends Component {\n//   //if the user is editing a current recipe, pass the name and intructions as props\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       name: this.props.name,\n//       instructions: this.props.instructions,\n//     };\n//   }\n//   //change target name input field when user types\n//   handleNameChange = (event) => {\n//     this.setState({\n//       name: event.target.value,\n//     });\n//   };\n//   //change target instructions input field when user types\n//   handleInstructionsChange = (event) => {\n//     this.setState({\n//       instructions: event.target.value,\n//     });\n//   };\n//   render() {\n//     return (\n//       <form className='container'>\n//         <div>\n//           <label>Name</label>\n//           <input\n//             type='text'\n//             value={this.props.name}\n//             onChange={this.handleNameChange}\n//           ></input>\n//           <label>Instructions</label>\n//           <textarea\n//             type='text'\n//             value={this.props.instructions}\n//             onChange={this.handleInstructionsChange}\n//           ></textarea>\n//           <button type='button' className='btn btn-danger btn-lg'>\n//             Cancel\n//           </button>\n//           <button type='button' className='btn btn-success btn-lg'>\n//             Submit\n//           </button>\n//         </div>\n//       </form>\n//     );\n//   }\n// }\n// export default addRecipe;","map":{"version":3,"sources":["/Users/owner/Desktop/Projects/recipeApp/client/src/components/addRecipe.js"],"names":["React","useState","Form","handleChange","e","console","log","target","value","AddRecipe","props","instructions","setInstructions","location","recipeInstruction","recipeName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,iBAAP;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAO,sCAAP;;AAEA,SAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB;AACD;;AAED,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAC9CS,KAAK,CAACG,QAAN,CAAeC,iBAD+B,CAAhD;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEJ,KAAK,CAACG,QAAN,CAAeE,UAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAOE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAQE;AACE,IAAA,SAAS,EAAC,SADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEJ,YAHT;AAIE,IAAA,QAAQ,EAAGP,CAAD,IAAOQ,eAAe,CAACR,CAAC,CAACG,MAAF,CAASC,KAAV,CAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eAcE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,8BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eAiBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,+BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,CADF,CADF;AAyBD;;AAED,eAAeC,SAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState } from \"react\";\nimport \"./addRecipe.css\";\nimport Form from \"react-bootstrap/Form\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction handleChange(e) {\n  console.log(e.target.value);\n}\n\nfunction AddRecipe(props) {\n  const [instructions, setInstructions] = useState(\n    props.location.recipeInstruction\n  );\n\n  return (\n    <div className='recipecontainer'>\n      <form>\n        <label className='title parent'>Name</label>\n        <input\n          className='box child'\n          type='text'\n          value={props.location.recipeName}\n        ></input>\n        <label className='title'>Instructions</label>\n        <textarea\n          className='textbox'\n          type='text'\n          value={instructions}\n          onChange={(e) => setInstructions(e.target.value)}\n        ></textarea>\n        <button type='button' className='btn btn-danger btn-lg button'>\n          Cancel\n        </button>\n        <button type='button' className='btn btn-success btn-lg button'>\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddRecipe;\n\n// class addRecipe extends Component {\n//   //if the user is editing a current recipe, pass the name and intructions as props\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       name: this.props.name,\n//       instructions: this.props.instructions,\n//     };\n//   }\n\n//   //change target name input field when user types\n//   handleNameChange = (event) => {\n//     this.setState({\n//       name: event.target.value,\n//     });\n//   };\n\n//   //change target instructions input field when user types\n//   handleInstructionsChange = (event) => {\n//     this.setState({\n//       instructions: event.target.value,\n//     });\n//   };\n//   render() {\n//     return (\n//       <form className='container'>\n//         <div>\n//           <label>Name</label>\n//           <input\n//             type='text'\n//             value={this.props.name}\n//             onChange={this.handleNameChange}\n//           ></input>\n//           <label>Instructions</label>\n//           <textarea\n//             type='text'\n//             value={this.props.instructions}\n//             onChange={this.handleInstructionsChange}\n//           ></textarea>\n//           <button type='button' className='btn btn-danger btn-lg'>\n//             Cancel\n//           </button>\n//           <button type='button' className='btn btn-success btn-lg'>\n//             Submit\n//           </button>\n//         </div>\n//       </form>\n//     );\n//   }\n// }\n\n// export default addRecipe;\n"]},"metadata":{},"sourceType":"module"}