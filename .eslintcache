[{"/Users/indusha/Desktop/recipeUI/recipeui/src/App.js":"1","/Users/indusha/Desktop/recipeUI/recipeui/src/reportWebVitals.js":"2","/Users/indusha/Desktop/recipeUI/recipeui/src/index.js":"3","/Users/indusha/Desktop/recipeUI/recipeui/src/components/addRecipe.js":"4","/Users/indusha/Desktop/recipeUI/recipeui/src/components/Recommendation.js":"5","/Users/indusha/Desktop/recipeUI/recipeui/src/components/LoginButton.js":"6","/Users/indusha/Desktop/recipeUI/recipeui/src/components/LogoutButton.js":"7","/Users/indusha/Desktop/recipeUI/recipeui/src/components/Recipe.js":"8","/Users/indusha/Desktop/recipeUI/recipeui/src/components/RecipeCard.js":"9","/Users/indusha/Desktop/recipeUI/recipeui/src/components/Profile.js":"10"},{"size":1705,"mtime":1606115845969,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1606109671817,"results":"13","hashOfConfig":"12"},{"size":511,"mtime":1606114284882,"results":"14","hashOfConfig":"12"},{"size":1244,"mtime":1606114261506,"results":"15","hashOfConfig":"12"},{"size":1339,"mtime":1606114276912,"results":"16","hashOfConfig":"12"},{"size":1315,"mtime":1606114263568,"results":"17","hashOfConfig":"12"},{"size":456,"mtime":1606114264717,"results":"18","hashOfConfig":"12"},{"size":2489,"mtime":1606114272478,"results":"19","hashOfConfig":"12"},{"size":771,"mtime":1606115090302,"results":"20","hashOfConfig":"12"},{"size":5495,"mtime":1606114266764,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"fnb9h5",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/indusha/Desktop/recipeUI/recipeui/src/App.js",["46"],"/Users/indusha/Desktop/recipeUI/recipeui/src/reportWebVitals.js",[],"/Users/indusha/Desktop/recipeUI/recipeui/src/index.js",[],["47","48"],"/Users/indusha/Desktop/recipeUI/recipeui/src/components/addRecipe.js",[],"/Users/indusha/Desktop/recipeUI/recipeui/src/components/Recommendation.js",["49","50","51","52"],"import { useAuth0 } from \"@auth0/auth0-react\";\nimport React, { useState, useEffect } from \"react\";\nimport JSONPretty from 'react-json-pretty';\n\n\n//Recommendation component\nconst Recommendations = () => {\n    const { user, isAuthenticated } = useAuth0();\n    const [hasError, setErrors] = useState(false);\n    const [recommendations, setRecommendations] = useState('getting recommendations...');\n    const [id, setId] = useState();\n\n\n    async function fetchData() {\n        const res = await fetch(\"/getRecommendations?id=3\");\n        res\n            .json()\n            .then(res => setRecommendations(res))\n            .catch(err => setErrors(err));\n    }\n\n    async function getUserid() {\n        const result = await fetch(\"/getUserid?email=\" + user.email);\n        result\n            .json()\n            .then(result => setId(result))\n            .catch(error => setErrors(error));\n    }\n\n\n\n    useEffect(() => {\n\n        fetchData();\n    });\n\n    //If user is logged in, it displays user information\n    return (\n        isAuthenticated && (\n            <div>\n                <img src={user.picture} alt={user.name} />\n                <h2>Recommendations for {user.name}</h2>\n\n\n                <span>{JSON.stringify(recommendations)}</span>\n                <hr />\n\n            </div>\n        )\n    )\n}\n\nexport default Recommendations","/Users/indusha/Desktop/recipeUI/recipeui/src/components/LoginButton.js",["53","54"],"\nimport React from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport \"./loginbutton.css\";\nimport headerImage from '../assets/30-Minute-Instant-Pot-Butter-Chicken-7.jpg'\nimport logo from '../assets/chefhat.png'\n//import the images needed for this page\n\n//Login button component\n//If user is not logged in, it shows the login button\nconst LoginButton = () => {\n  const { loginWithRedirect, isAuthenticated } = useAuth0();\n\n  return (\n    !isAuthenticated && (\n      //creates a div component for each section of the page \n      //includes a container to group all sections of the page\n      //header is the main picture on the left of the page \n      //subheading is the right half of the page \n      //logo is the chef's hat image \n      //intro is the value proposition under the hat \n      //button will take user to the log in/sign up pages\n      <>\n        <div class=\"container\">\n\n          <div className=\"subheading\">\n            <div ><img className=\"logo\" src={logo} /></div>\n            <div className=\"intro\"><h1>Start cooking with PocketChef!</h1></div>\n            <button type=\"button\" className=\"btn btn-warning btn-lg button\" onClick={() => loginWithRedirect()}>\n              Explore Recipes\n</button>\n          </div>\n        </div>\n      </>\n\n    )\n  )\n}\n\nexport default LoginButton \n","/Users/indusha/Desktop/recipeUI/recipeui/src/components/LogoutButton.js",[],"/Users/indusha/Desktop/recipeUI/recipeui/src/components/Recipe.js",["55","56","57","58","59","60","61","62","63","64","65"],"import React, { Component, useState, useEffect } from \"react\";\nimport AddRecipe from \"./addRecipe\";\nimport \"./Recipe.css\";\nimport { Route, BrowserRouter as Router, Switch, Link } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport RecipeCard from \"./RecipeCard\";\nimport { Row, Col } from 'react-simple-flex-grid';\nimport \"react-simple-flex-grid/lib/main.css\";\nimport ReactBootstrap, { Card, Button, Grid, Panel, FormGroup, InputGroup, FormControl } from 'react-bootstrap'\n\nconst Recipe = () => {\n  const { user, isAuthenticated } = useAuth0();\n  const [hasError, setErrors] = useState(false);\n  const [recipes, setRecipes] = useState();\n  const [input, setInput] = useState('');\n\n  async function fetchData() {\n    const res = await fetch(\"/getRecipes\");\n    res\n      .json()\n      .then(res => setRecipes(res))\n      .catch(err => setErrors(err));\n  }\n\n\n\n  useEffect(() => {\n    fetchData();\n  });\n\n  //const updateSearch = (event) => {\n  //setSearch({ search: event.target.value.substr(0, 20) });\n  //}\n\n  const onChange = (e) => {\n    setInput(e.currentTarget.value);\n  }\n\n\n  let filteredRecipes = recipes && recipes.filter(\n    (recipe) => {\n      return recipe.recipeName.toLowerCase().indexOf(input) !== -1;\n    }\n  );\n\n  return (\n\n    true && (\n\n\n      <Router>\n        <div>\n          <div style={{ margin: \"20px\" }}>\n            <InputGroup size=\"lg\">\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"inputGroup-sizing-lg\">Start Cooking:</InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl onChange={onChange} placeholder='enter a recipe name' aria-label=\"Large\" aria-describedby=\"inputGroup-sizing-sm\" />\n            </InputGroup>\n          </div>\n          <Row gutter={40}>\n            {filteredRecipes && filteredRecipes.map((\n              recipe) => (\n\n                <Col\n                  xs={{ span: 6 }} sm={{ span: 4 }} md={{ span: 4 }}\n                  lg={{ span: 3 }} xl={{ span: 3 }}>\n\n                  <RecipeCard name={recipe.recipeName} id={recipe.idrecipe} instructions={recipe.recipeInstruction} img={recipe.imgURL} ingredients={recipe.ingredients} />\n                </Col>\n\n\n\n\n\n              ))}\n          </Row>\n\n          <Switch>\n            <Route path=\"/addRecipe\">\n              <AddRecipe />\n            </Route>\n          </Switch>\n        </div>\n      </Router >\n    )\n  );\n}\n\nexport default Recipe; //Export the recipe component to be used in the main index.js file","/Users/indusha/Desktop/recipeUI/recipeui/src/components/RecipeCard.js",["66","67","68"],"/Users/indusha/Desktop/recipeUI/recipeui/src/components/Profile.js",["69","70","71","72","73","74","75","76","77","78","79","80","81","82"],{"ruleId":"83","severity":1,"message":"84","line":8,"column":10,"nodeType":"85","messageId":"86","endLine":8,"endColumn":18},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"83","severity":1,"message":"91","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":18},{"ruleId":"83","severity":1,"message":"92","line":9,"column":12,"nodeType":"85","messageId":"86","endLine":9,"endColumn":20},{"ruleId":"83","severity":1,"message":"93","line":11,"column":12,"nodeType":"85","messageId":"86","endLine":11,"endColumn":14},{"ruleId":"83","severity":1,"message":"94","line":22,"column":20,"nodeType":"85","messageId":"86","endLine":22,"endColumn":29},{"ruleId":"83","severity":1,"message":"95","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":19},{"ruleId":"96","severity":1,"message":"97","line":27,"column":19,"nodeType":"98","endLine":27,"endColumn":54},{"ruleId":"83","severity":1,"message":"99","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"100","line":4,"column":50,"nodeType":"85","messageId":"86","endLine":4,"endColumn":54},{"ruleId":"83","severity":1,"message":"101","line":9,"column":8,"nodeType":"85","messageId":"86","endLine":9,"endColumn":22},{"ruleId":"83","severity":1,"message":"102","line":9,"column":26,"nodeType":"85","messageId":"86","endLine":9,"endColumn":30},{"ruleId":"83","severity":1,"message":"103","line":9,"column":32,"nodeType":"85","messageId":"86","endLine":9,"endColumn":38},{"ruleId":"83","severity":1,"message":"104","line":9,"column":40,"nodeType":"85","messageId":"86","endLine":9,"endColumn":44},{"ruleId":"83","severity":1,"message":"105","line":9,"column":46,"nodeType":"85","messageId":"86","endLine":9,"endColumn":51},{"ruleId":"83","severity":1,"message":"106","line":9,"column":53,"nodeType":"85","messageId":"86","endLine":9,"endColumn":62},{"ruleId":"83","severity":1,"message":"107","line":12,"column":11,"nodeType":"85","messageId":"86","endLine":12,"endColumn":15},{"ruleId":"83","severity":1,"message":"108","line":12,"column":17,"nodeType":"85","messageId":"86","endLine":12,"endColumn":32},{"ruleId":"83","severity":1,"message":"92","line":13,"column":10,"nodeType":"85","messageId":"86","endLine":13,"endColumn":18},{"ruleId":"83","severity":1,"message":"99","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"101","line":2,"column":8,"nodeType":"85","messageId":"86","endLine":2,"endColumn":22},{"ruleId":"83","severity":1,"message":"103","line":2,"column":32,"nodeType":"85","messageId":"86","endLine":2,"endColumn":38},{"ruleId":"83","severity":1,"message":"109","line":8,"column":34,"nodeType":"85","messageId":"86","endLine":8,"endColumn":40},{"ruleId":"83","severity":1,"message":"110","line":10,"column":8,"nodeType":"85","messageId":"86","endLine":10,"endColumn":14},{"ruleId":"96","severity":1,"message":"97","line":50,"column":36,"nodeType":"98","endLine":50,"endColumn":79},{"ruleId":"96","severity":1,"message":"97","line":50,"column":85,"nodeType":"98","endLine":50,"endColumn":128},{"ruleId":"96","severity":1,"message":"97","line":51,"column":36,"nodeType":"98","endLine":51,"endColumn":79},{"ruleId":"96","severity":1,"message":"97","line":51,"column":85,"nodeType":"98","endLine":51,"endColumn":128},{"ruleId":"96","severity":1,"message":"97","line":52,"column":36,"nodeType":"98","endLine":52,"endColumn":79},{"ruleId":"96","severity":1,"message":"97","line":52,"column":85,"nodeType":"98","endLine":52,"endColumn":128},{"ruleId":"96","severity":1,"message":"97","line":73,"column":36,"nodeType":"98","endLine":73,"endColumn":79},{"ruleId":"96","severity":1,"message":"97","line":73,"column":85,"nodeType":"98","endLine":73,"endColumn":128},{"ruleId":"96","severity":1,"message":"97","line":74,"column":36,"nodeType":"98","endLine":74,"endColumn":79},{"ruleId":"96","severity":1,"message":"97","line":74,"column":85,"nodeType":"98","endLine":74,"endColumn":128},{"ruleId":"96","severity":1,"message":"97","line":75,"column":36,"nodeType":"98","endLine":75,"endColumn":79},{"ruleId":"96","severity":1,"message":"97","line":75,"column":85,"nodeType":"98","endLine":75,"endColumn":128},"no-unused-vars","'useAuth0' is defined but never used.","Identifier","unusedVar","no-native-reassign",["111"],"no-negated-in-lhs",["112"],"'JSONPretty' is defined but never used.","'hasError' is assigned a value but never used.","'id' is assigned a value but never used.","'getUserid' is defined but never used.","'headerImage' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.","'Link' is defined but never used.","'ReactBootstrap' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'Panel' is defined but never used.","'FormGroup' is defined but never used.","'user' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'Router' is defined but never used.","'image1' is defined but never used.","no-global-assign","no-unsafe-negation"]